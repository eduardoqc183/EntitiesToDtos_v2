DECLARE @tableName NVARCHAR(MAX), @schemaName NVARCHAR(MAX), @className NVARCHAR(MAX), @nombrecapital NVARCHAR(MAX)
 
--------------- Input arguments ---------------
SET @tableName = '{xtablename}'
SET @schemaName = 'dbo'
SET @className = @tableName + 'Dto'
SET @nombrecapital = UPPER(LEFT(@tableName,1))+LOWER(SUBSTRING(@tableName,2,LEN(@tableName)))
--------------- Input arguments end -----------

declare tableColumns CURSOR LOCAL FOR

SELECT cols.name FROM sys.columns cols
	JOIN sys.tables tbl ON cols.object_id = tbl.object_id
	WHERE tbl.name = @tableName and cols.is_identity = 1


DECLARE @tableid NVARCHAR(MAX)
OPEN tableColumns
FETCH NEXT FROM tableColumns INTO @tableid

BEGIN
PRINT 'using {xnsentities};'
PRINT 'using System;'
PRINT 'using {xnsdatamodel};'
PRINT 'using System.Linq;'
PRINT 'using System.Threading.Tasks;'
PRINT 'using System.Collections.Generic;'
PRINT ''
PRINT 'namespace {xnsbussineslayer}'
PRINT '{ ' 
PRINT '    public class ' + @nombrecapital + 'Bl'
PRINT '	{ ' 
print '		public Task<RequestResult> Insertar' + @nombrecapital + '(' + @className + ' dto)'
PRINT '		{ ' 
PRINT '            return Task.Run(async () =>'
PRINT '            {'
PRINT '                try'
PRINT '                {'
PRINT '                    using (var dbContext = new DB_A5530E_peruinvoiceEntities())'
PRINT '                    {'
PRINT '                        var entity = dto.ToEntity();'
PRINT '                        entity.f_fechacreacion = DateTime.Now;'
PRINT '                        dbContext.' + @tableName + '.Add(entity);'
PRINT '                        await dbContext.SaveChangesAsync();'
PRINT '                        return new RequestResult { Success = true };'
PRINT '                    }'
PRINT '                }'
PRINT '                catch (Exception)'
PRINT '                {'
PRINT ''
PRINT '                    throw;'
PRINT '                }'
PRINT '            });'
PRINT '        }'
PRINT ''
PRINT '        public Task<RequestResult> Actualizar' + @nombrecapital + '(' + @className + ' dto)'
PRINT '        {'
PRINT '            return Task.Run(async () =>'
PRINT '            {'
PRINT '                try'
PRINT '                {'
PRINT '                    using (var dbContext = new DB_A5530E_peruinvoiceEntities())'
PRINT '                    {'
PRINT '                        var entity = dto.ToEntity();'
PRINT '                        entity.f_fechamodificacion = DateTime.Now;'
PRINT '                        dbContext.' + @tableName + '.Attach(entity);'
PRINT '                        dbContext.Entry(entity).State = System.Data.Entity.EntityState.Modified;'
PRINT '                        await dbContext.SaveChangesAsync();'
PRINT '                        return new RequestResult { Success = true };'
PRINT '                    }'
PRINT '                }'
PRINT '                catch (Exception)'
PRINT '                {'
PRINT ''
PRINT '                    throw;'
PRINT '                }'
PRINT '            });'
PRINT '        }'
PRINT ''
PRINT '        public Task<RequestResult> Eliminar' + @nombrecapital + '(int id)'
PRINT '        {'
PRINT '            return Task.Run(async () =>'
PRINT '            {'
PRINT '                try'
PRINT '                {'
PRINT '                    using (var dbContext = new DB_A5530E_peruinvoiceEntities())'
PRINT '                    {'
PRINT '                        var entity = dbContext.' + @tableName + '.FirstOrDefault(p => p.' + @tableid + ' == id);'
PRINT '                        dbContext.' + @tableName + '.Attach(entity);'
PRINT '                        dbContext.Entry(entity).State = System.Data.Entity.EntityState.Deleted;'
PRINT '                        await dbContext.SaveChangesAsync();'
PRINT '                        return new RequestResult { Success = true };'
PRINT '                    }'
PRINT '                }'
PRINT '                catch (Exception)'
PRINT '                {'
PRINT ''
PRINT '                    throw;'
PRINT '                }'
PRINT '            });'
PRINT '        }'
PRINT ''
PRINT '        public Task<RequestResult<' + @className + '>> Obtener' + @nombrecapital + 'PorId(int id)'
PRINT '        {'
PRINT '            return Task.Run(() =>'
PRINT '            {'
PRINT '                try'
PRINT '                {'
PRINT '                    using (var dbContext = new DB_A5530E_peruinvoiceEntities())'
PRINT '                    {'
PRINT '                        var ' + @tableName + ' = dbContext.' + @tableName + '.FirstOrDefault(p => p.' + @tableid + ' == id);'
PRINT '                        if (' + @tableName + ' == null) throw new Exception("No existe el ' + @tableName + ' con id: " + id);'
PRINT '                        return new RequestResult<' + @className + '> { Success = true, Data = ' + @tableName + '.ToDTO() };'
PRINT '                    }'
PRINT '                }'
PRINT '                catch (Exception)'
PRINT '                {'
PRINT ''
PRINT '                    throw;'
PRINT '                }'
PRINT '            });'
PRINT '        }'
PRINT ''
PRINT '        public Task<RequestResult<List<' + @className + '>>> ObtenerListado' + @nombrecapital + 's()'
PRINT '        {'
PRINT '            return Task.Run(() =>'
PRINT '            {'
PRINT '                try'
PRINT '                {'
PRINT '                    using (var dbContext = new DB_A5530E_peruinvoiceEntities())'
PRINT '                    {'
PRINT '                        var listado = dbContext.' + @tableName + '.ToDTOs();'
PRINT ''
PRINT '                        return new RequestResult<List<' + @className + '>> { Success = true, Data = listado };'
PRINT '                    }'
PRINT '                }'
PRINT '                catch (Exception)'
PRINT '                {'
PRINT ''
PRINT '                    throw;'
PRINT '                }'
PRINT '            });'
PRINT '        }'
PRINT '    }'
PRINT '}'
end
CLOSE tableColumns